version: '3.9'

volumes:
   geoserver-data:
   geo-db-data:
   rmq-data:

services:

    db:
      image: kartoza/postgis:13.0
      volumes:
        - geo-db-data:/var/lib/postgresql
      ports:
        - '5432:5432'
      environment:
        POSTGRES_DB: gis
        POSTGRES_USER: docker
        POSTGRES_PASS: docker
        FORCE_SSL: TRUE
      restart: on-failure
      healthcheck:
            test: "pg_isready -h 127.0.0.1"
            interval: 5s
            timeout: 3s
            retries: 5

    geoserver:
      image: kartoza/geoserver:2.23.1
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
      ports:
        - '8080:8080'
      restart: on-failure
      environment:
        GEOSERVER_DATA_DIR: /opt/geoserver/data_dir
        GEOSERVER_ADMIN_PASSWORD: myawesomegeoserver
        GEOSERVER_ADMIN_USER: kartoza
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u ${GEOSERVER_ADMIN_USER}:'${GEOSERVER_ADMIN_PASSWORD}' http://localhost:8080/geoserver/rest/about/version.xml"
        interval: 1m30s
        timeout: 10s
        retries: 3

    rabbitmq:
      image: rabbitmq:3-management
      #    environment:
      #      RABBITMQ_DEFAULT_USER: user
      #      RABBITMQ_DEFAULT_PASS: password
      ports:
        - "5672:5672"
        - "8090:15672"
      volumes:
        - rmq-data:/var/lib/rabbitmq

    maildev:
      image: maildev/maildev
      ports:
        - "1080:1080"
        - "1025:1025"